#!/bin/bash

exec &> >(tee -a "/srv/webhooks/logs/release.log")

sleep 1

builddir="/srv/jellyfin"

tempfile="${1}"

payload="$( cat ${tempfile} )"

tagname="$( echo "${payload}" | jq -r '.release.tag_name' )"
reponame="$( echo "${payload}" | jq -r '.repository.name' )"

case ${reponame} in
  jellyfin-ffmpeg)
    repotype="ffmpeg"
    buildcmd="/bin/bash /srv/jellyfin/scripts/build.d/build-ffmpeg ${tagname}"
  ;;
  jellyfin-plugin-*)
    repotype="plugin"
    buildcmd="/bin/bash /srv/jellyfin/scripts/build.d/build-plugin ${reponame} ${tagname}"
  ;;
  jellyfin-android|jellyfin-androidtv)
    repotype="client"
    buildcmd="/bin/bash /srv/jellyfin/scripts/build.d/build-client-android ${reponame} ${tagname}"
  ;;
  jellyfin-docs)
    repotype="meta"
    buildcmd="/bin/bash /srv/jellyfin/scripts/build.d/build-docs ${tagname}"
  ;;
  jellyfin-kodi)
    repotype="client"
    buildcmd="/bin/bash /srv/repository/kodi-repo.sh ${tagname}"
  ;;
  *)
    echo "ERROR: Invalid repository name ${reponame}"
    rm ${tempfile}
    exit 1
  ;;
esac

(

flock -x 300

time_start=$( date +%s )

action="$( echo "${payload}" | jq -r '.action' )"
if [[ ${action} != "published" ]]; then
    echo "Webhook received for ${reponame} but action is not 'published', ignoring."
    exit 0
fi

echo "------"
echo "Building ${repotype} ${reponame} tag ${tagname} on $(date)"
echo "------"

${buildcmd}

rm ${tempfile}

mirrorbits refresh

time_end=$( date +%s )
time_running=$(( $time_end - $time_start ))
echo "------"
echo "Build complete for ${repotype} ${reponame} tag ${tagname} on $(date) - total time: ${time_running}s"
echo "------"
echo

) 300>/run/shm/release.lock
